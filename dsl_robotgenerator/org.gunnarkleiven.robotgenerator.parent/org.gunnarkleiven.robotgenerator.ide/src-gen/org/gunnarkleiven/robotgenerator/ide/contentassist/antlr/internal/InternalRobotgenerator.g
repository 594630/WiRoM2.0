/*
 * generated by Xtext 2.25.0
 */
grammar InternalRobotgenerator;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.gunnarkleiven.robotgenerator.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.gunnarkleiven.robotgenerator.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.gunnarkleiven.robotgenerator.services.RobotgeneratorGrammarAccess;

}
@parser::members {
	private RobotgeneratorGrammarAccess grammarAccess;

	public void setGrammarAccess(RobotgeneratorGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getCommandsAssignment()); }
		(rule__Model__CommandsAssignment)*
		{ after(grammarAccess.getModelAccess().getCommandsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getGroup()); }
		(rule__Command__Group__0)
		{ after(grammarAccess.getCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRobotName
entryRuleRobotName
:
{ before(grammarAccess.getRobotNameRule()); }
	 ruleRobotName
{ after(grammarAccess.getRobotNameRule()); } 
	 EOF 
;

// Rule RobotName
ruleRobotName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotNameAccess().getGroup()); }
		(rule__RobotName__Group__0)
		{ after(grammarAccess.getRobotNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePositionValue
entryRulePositionValue
:
{ before(grammarAccess.getPositionValueRule()); }
	 rulePositionValue
{ after(grammarAccess.getPositionValueRule()); } 
	 EOF 
;

// Rule PositionValue
rulePositionValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPositionValueAccess().getGroup()); }
		(rule__PositionValue__Group__0)
		{ after(grammarAccess.getPositionValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommandType
entryRuleCommandType
:
{ before(grammarAccess.getCommandTypeRule()); }
	 ruleCommandType
{ after(grammarAccess.getCommandTypeRule()); } 
	 EOF 
;

// Rule CommandType
ruleCommandType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandTypeAccess().getAlternatives()); }
		(rule__CommandType__Alternatives)
		{ after(grammarAccess.getCommandTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RobotType
ruleRobotType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotTypeAccess().getAlternatives()); }
		(rule__RobotType__Alternatives)
		{ after(grammarAccess.getRobotTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandTypeAccess().getGroup_0()); }
		(rule__CommandType__Group_0__0)
		{ after(grammarAccess.getCommandTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandTypeAccess().getGroup_1()); }
		(rule__CommandType__Group_1__0)
		{ after(grammarAccess.getCommandTypeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotTypeAccess().getMOOSEEnumLiteralDeclaration_0()); }
		('moose')
		{ after(grammarAccess.getRobotTypeAccess().getMOOSEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRobotTypeAccess().getMAVIC2PROEnumLiteralDeclaration_1()); }
		('mavic2pro')
		{ after(grammarAccess.getRobotTypeAccess().getMAVIC2PROEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRobotTypeAccess().getOP2EnumLiteralDeclaration_2()); }
		('op2')
		{ after(grammarAccess.getRobotTypeAccess().getOP2EnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRobotTypeAccess().getBB8EnumLiteralDeclaration_3()); }
		('bb8')
		{ after(grammarAccess.getRobotTypeAccess().getBB8EnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__0__Impl
	rule__Command__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getCommandTypeAssignment_0()); }
	(rule__Command__CommandTypeAssignment_0)
	{ after(grammarAccess.getCommandAccess().getCommandTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__1__Impl
	rule__Command__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCommandAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__2__Impl
	rule__Command__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getRobotTypeAssignment_2()); }
	(rule__Command__RobotTypeAssignment_2)
	{ after(grammarAccess.getCommandAccess().getRobotTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__3__Impl
	rule__Command__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getCommandAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__4__Impl
	rule__Command__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getRobotNameAssignment_4()); }
	(rule__Command__RobotNameAssignment_4)?
	{ after(grammarAccess.getCommandAccess().getRobotNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__5__Impl
	rule__Command__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getCommandAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__6__Impl
	rule__Command__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getXValueAssignment_6()); }
	(rule__Command__XValueAssignment_6)?
	{ after(grammarAccess.getCommandAccess().getXValueAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__7__Impl
	rule__Command__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getCommandAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__8__Impl
	rule__Command__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getYValueAssignment_8()); }
	(rule__Command__YValueAssignment_8)?
	{ after(grammarAccess.getCommandAccess().getYValueAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__9__Impl
	rule__Command__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getCommandAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getSemicolonKeyword_10()); }
	';'
	{ after(grammarAccess.getCommandAccess().getSemicolonKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RobotName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotName__Group__0__Impl
	rule__RobotName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotNameAccess().getRobotNameAction_0()); }
	()
	{ after(grammarAccess.getRobotNameAccess().getRobotNameAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RobotName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotNameAccess().getValueAssignment_1()); }
	(rule__RobotName__ValueAssignment_1)
	{ after(grammarAccess.getRobotNameAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PositionValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionValue__Group__0__Impl
	rule__PositionValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionValueAccess().getPositionValueAction_0()); }
	()
	{ after(grammarAccess.getPositionValueAccess().getPositionValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionValueAccess().getValueAssignment_1()); }
	(rule__PositionValue__ValueAssignment_1)
	{ after(grammarAccess.getPositionValueAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommandType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandType__Group_0__0__Impl
	rule__CommandType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandTypeAccess().getAddRobotAction_0_0()); }
	()
	{ after(grammarAccess.getCommandTypeAccess().getAddRobotAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandTypeAccess().getValueAssignment_0_1()); }
	(rule__CommandType__ValueAssignment_0_1)
	{ after(grammarAccess.getCommandTypeAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommandType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandType__Group_1__0__Impl
	rule__CommandType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandTypeAccess().getRemoveRobotAction_1_0()); }
	()
	{ after(grammarAccess.getCommandTypeAccess().getRemoveRobotAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandTypeAccess().getValueAssignment_1_1()); }
	(rule__CommandType__ValueAssignment_1_1)
	{ after(grammarAccess.getCommandTypeAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__CommandsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getCommandsCommandParserRuleCall_0()); }
		ruleCommand
		{ after(grammarAccess.getModelAccess().getCommandsCommandParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CommandTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCommandTypeCommandTypeParserRuleCall_0_0()); }
		ruleCommandType
		{ after(grammarAccess.getCommandAccess().getCommandTypeCommandTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__RobotTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getRobotTypeRobotTypeEnumRuleCall_2_0()); }
		ruleRobotType
		{ after(grammarAccess.getCommandAccess().getRobotTypeRobotTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__RobotNameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getRobotNameRobotNameParserRuleCall_4_0()); }
		ruleRobotName
		{ after(grammarAccess.getCommandAccess().getRobotNameRobotNameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__XValueAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getXValuePositionValueParserRuleCall_6_0()); }
		rulePositionValue
		{ after(grammarAccess.getCommandAccess().getXValuePositionValueParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__YValueAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getYValuePositionValueParserRuleCall_8_0()); }
		rulePositionValue
		{ after(grammarAccess.getCommandAccess().getYValuePositionValueParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotName__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotNameAccess().getValueSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRobotNameAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionValueAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getPositionValueAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandType__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandTypeAccess().getValueAddRobotKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getCommandTypeAccess().getValueAddRobotKeyword_0_1_0()); }
			'addRobot'
			{ after(grammarAccess.getCommandTypeAccess().getValueAddRobotKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getCommandTypeAccess().getValueAddRobotKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandType__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandTypeAccess().getValueRemoveRobotKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getCommandTypeAccess().getValueRemoveRobotKeyword_1_1_0()); }
			'removeRobot'
			{ after(grammarAccess.getCommandTypeAccess().getValueRemoveRobotKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getCommandTypeAccess().getValueRemoveRobotKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
