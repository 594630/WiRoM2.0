/**
 * generated by Xtext 2.25.0
 */
package org.gunnarkleiven.robotgenerator.robotgenerator.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.gunnarkleiven.robotgenerator.robotgenerator.Command;
import org.gunnarkleiven.robotgenerator.robotgenerator.CommandType;
import org.gunnarkleiven.robotgenerator.robotgenerator.PositionValue;
import org.gunnarkleiven.robotgenerator.robotgenerator.RobotName;
import org.gunnarkleiven.robotgenerator.robotgenerator.RobotType;
import org.gunnarkleiven.robotgenerator.robotgenerator.RobotgeneratorPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Command</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.gunnarkleiven.robotgenerator.robotgenerator.impl.CommandImpl#getCommandType <em>Command Type</em>}</li>
 *   <li>{@link org.gunnarkleiven.robotgenerator.robotgenerator.impl.CommandImpl#getRobotType <em>Robot Type</em>}</li>
 *   <li>{@link org.gunnarkleiven.robotgenerator.robotgenerator.impl.CommandImpl#getRobotName <em>Robot Name</em>}</li>
 *   <li>{@link org.gunnarkleiven.robotgenerator.robotgenerator.impl.CommandImpl#getXValue <em>XValue</em>}</li>
 *   <li>{@link org.gunnarkleiven.robotgenerator.robotgenerator.impl.CommandImpl#getYValue <em>YValue</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CommandImpl extends MinimalEObjectImpl.Container implements Command
{
  /**
   * The cached value of the '{@link #getCommandType() <em>Command Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommandType()
   * @generated
   * @ordered
   */
  protected CommandType commandType;

  /**
   * The default value of the '{@link #getRobotType() <em>Robot Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRobotType()
   * @generated
   * @ordered
   */
  protected static final RobotType ROBOT_TYPE_EDEFAULT = RobotType.MOOSE;

  /**
   * The cached value of the '{@link #getRobotType() <em>Robot Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRobotType()
   * @generated
   * @ordered
   */
  protected RobotType robotType = ROBOT_TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getRobotName() <em>Robot Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRobotName()
   * @generated
   * @ordered
   */
  protected RobotName robotName;

  /**
   * The cached value of the '{@link #getXValue() <em>XValue</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXValue()
   * @generated
   * @ordered
   */
  protected PositionValue xValue;

  /**
   * The cached value of the '{@link #getYValue() <em>YValue</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYValue()
   * @generated
   * @ordered
   */
  protected PositionValue yValue;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CommandImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RobotgeneratorPackage.Literals.COMMAND;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CommandType getCommandType()
  {
    return commandType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCommandType(CommandType newCommandType, NotificationChain msgs)
  {
    CommandType oldCommandType = commandType;
    commandType = newCommandType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RobotgeneratorPackage.COMMAND__COMMAND_TYPE, oldCommandType, newCommandType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCommandType(CommandType newCommandType)
  {
    if (newCommandType != commandType)
    {
      NotificationChain msgs = null;
      if (commandType != null)
        msgs = ((InternalEObject)commandType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RobotgeneratorPackage.COMMAND__COMMAND_TYPE, null, msgs);
      if (newCommandType != null)
        msgs = ((InternalEObject)newCommandType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RobotgeneratorPackage.COMMAND__COMMAND_TYPE, null, msgs);
      msgs = basicSetCommandType(newCommandType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RobotgeneratorPackage.COMMAND__COMMAND_TYPE, newCommandType, newCommandType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RobotType getRobotType()
  {
    return robotType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRobotType(RobotType newRobotType)
  {
    RobotType oldRobotType = robotType;
    robotType = newRobotType == null ? ROBOT_TYPE_EDEFAULT : newRobotType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RobotgeneratorPackage.COMMAND__ROBOT_TYPE, oldRobotType, robotType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RobotName getRobotName()
  {
    return robotName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRobotName(RobotName newRobotName, NotificationChain msgs)
  {
    RobotName oldRobotName = robotName;
    robotName = newRobotName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RobotgeneratorPackage.COMMAND__ROBOT_NAME, oldRobotName, newRobotName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRobotName(RobotName newRobotName)
  {
    if (newRobotName != robotName)
    {
      NotificationChain msgs = null;
      if (robotName != null)
        msgs = ((InternalEObject)robotName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RobotgeneratorPackage.COMMAND__ROBOT_NAME, null, msgs);
      if (newRobotName != null)
        msgs = ((InternalEObject)newRobotName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RobotgeneratorPackage.COMMAND__ROBOT_NAME, null, msgs);
      msgs = basicSetRobotName(newRobotName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RobotgeneratorPackage.COMMAND__ROBOT_NAME, newRobotName, newRobotName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PositionValue getXValue()
  {
    return xValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetXValue(PositionValue newXValue, NotificationChain msgs)
  {
    PositionValue oldXValue = xValue;
    xValue = newXValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RobotgeneratorPackage.COMMAND__XVALUE, oldXValue, newXValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXValue(PositionValue newXValue)
  {
    if (newXValue != xValue)
    {
      NotificationChain msgs = null;
      if (xValue != null)
        msgs = ((InternalEObject)xValue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RobotgeneratorPackage.COMMAND__XVALUE, null, msgs);
      if (newXValue != null)
        msgs = ((InternalEObject)newXValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RobotgeneratorPackage.COMMAND__XVALUE, null, msgs);
      msgs = basicSetXValue(newXValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RobotgeneratorPackage.COMMAND__XVALUE, newXValue, newXValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PositionValue getYValue()
  {
    return yValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetYValue(PositionValue newYValue, NotificationChain msgs)
  {
    PositionValue oldYValue = yValue;
    yValue = newYValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RobotgeneratorPackage.COMMAND__YVALUE, oldYValue, newYValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYValue(PositionValue newYValue)
  {
    if (newYValue != yValue)
    {
      NotificationChain msgs = null;
      if (yValue != null)
        msgs = ((InternalEObject)yValue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RobotgeneratorPackage.COMMAND__YVALUE, null, msgs);
      if (newYValue != null)
        msgs = ((InternalEObject)newYValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RobotgeneratorPackage.COMMAND__YVALUE, null, msgs);
      msgs = basicSetYValue(newYValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RobotgeneratorPackage.COMMAND__YVALUE, newYValue, newYValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RobotgeneratorPackage.COMMAND__COMMAND_TYPE:
        return basicSetCommandType(null, msgs);
      case RobotgeneratorPackage.COMMAND__ROBOT_NAME:
        return basicSetRobotName(null, msgs);
      case RobotgeneratorPackage.COMMAND__XVALUE:
        return basicSetXValue(null, msgs);
      case RobotgeneratorPackage.COMMAND__YVALUE:
        return basicSetYValue(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RobotgeneratorPackage.COMMAND__COMMAND_TYPE:
        return getCommandType();
      case RobotgeneratorPackage.COMMAND__ROBOT_TYPE:
        return getRobotType();
      case RobotgeneratorPackage.COMMAND__ROBOT_NAME:
        return getRobotName();
      case RobotgeneratorPackage.COMMAND__XVALUE:
        return getXValue();
      case RobotgeneratorPackage.COMMAND__YVALUE:
        return getYValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RobotgeneratorPackage.COMMAND__COMMAND_TYPE:
        setCommandType((CommandType)newValue);
        return;
      case RobotgeneratorPackage.COMMAND__ROBOT_TYPE:
        setRobotType((RobotType)newValue);
        return;
      case RobotgeneratorPackage.COMMAND__ROBOT_NAME:
        setRobotName((RobotName)newValue);
        return;
      case RobotgeneratorPackage.COMMAND__XVALUE:
        setXValue((PositionValue)newValue);
        return;
      case RobotgeneratorPackage.COMMAND__YVALUE:
        setYValue((PositionValue)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RobotgeneratorPackage.COMMAND__COMMAND_TYPE:
        setCommandType((CommandType)null);
        return;
      case RobotgeneratorPackage.COMMAND__ROBOT_TYPE:
        setRobotType(ROBOT_TYPE_EDEFAULT);
        return;
      case RobotgeneratorPackage.COMMAND__ROBOT_NAME:
        setRobotName((RobotName)null);
        return;
      case RobotgeneratorPackage.COMMAND__XVALUE:
        setXValue((PositionValue)null);
        return;
      case RobotgeneratorPackage.COMMAND__YVALUE:
        setYValue((PositionValue)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RobotgeneratorPackage.COMMAND__COMMAND_TYPE:
        return commandType != null;
      case RobotgeneratorPackage.COMMAND__ROBOT_TYPE:
        return robotType != ROBOT_TYPE_EDEFAULT;
      case RobotgeneratorPackage.COMMAND__ROBOT_NAME:
        return robotName != null;
      case RobotgeneratorPackage.COMMAND__XVALUE:
        return xValue != null;
      case RobotgeneratorPackage.COMMAND__YVALUE:
        return yValue != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (robotType: ");
    result.append(robotType);
    result.append(')');
    return result.toString();
  }

} //CommandImpl
