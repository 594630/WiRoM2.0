/*
 * generated by Xtext 2.25.0
 */
package org.gunnarkleiven.robotgenerator.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.gunnarkleiven.robotgenerator.robotgenerator.Command
import org.gunnarkleiven.robotgenerator.robotgenerator.RobotType

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class RobotgeneratorGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))

		for (e : resource.allContents.toIterable.filter(Command)) {
//			fsa.generateFile('''robotgenerator/«e.robotName.value»/«e.robotName.value».py''', e.compile_python)
			fsa.generateFile('''robotgenerator/«e.robotName.value»/«e.robotName.value»_controller.py''', e.compile_controller)
			fsa.generateFile('''robotgenerator/«e.robotName.value»/«e.robotName.value».json''', e.compile_json)
//			if (e.robotType.equals(RobotType.MOOSE)) {
//				fsa.generateFile('''robotgenerator/«e.robotName.value»/«e.robotName.value»_simpleactions.py''', e.compile_moose)
//			}
//			else if (e.robotType.equals(RobotType.MAVIC2PRO)) {
//				fsa.generateFile('''robotgenerator/«e.robotName.value»/«e.robotName.value»_simpleactions.py''', e.compile_mavic2pro)
//			}
//			else if (e.robotType.equals(RobotType.OP2)) {
//				fsa.generateFile('''robotgenerator/«e.robotName.value»/«e.robotName.value»_simpleactions.py''', e.compile_op2)
//			}
//			else if (e.robotType.equals(RobotType.BB8)) {
//				fsa.generateFile('''robotgenerator/«e.robotName.value»/«e.robotName.value»_simpleactions.py''', e.compile_bb8)
//			}
//			
		}
		
	}
	
			
	
//	def compile_python(Command command) {
//		'''
//		import «command.capitalizeType»SimpleactionsGenerator
//		«command.capitalizeType»SimpleactionsGenerator(port_number_placeholder, '«command.robotName.value»')
//		'''	
//	}


	def compile_controller(Command command) {
		'''
		import sys
		import os
		
		# simpleactions class
		controller_path = os.path.join(os.getcwd(), os.pardir)
		sys.path.insert(0, controller_path)
		
		from «command.robotType.toString»_simpleactions_generator import «capitalizeType(command)»SimpleactionsGenerator
		«command.robotType.toString»_simpleactions = «capitalizeType(command)»SimpleactionsGenerator("«IF command.robotName.value !== null»«command.robotName.value»«ELSE»undefined_«command.robotType.toString»«ENDIF»")
		«command.robotType.toString»_simpleactions.initiate_threads()
		'''
	}

	
	def compile_json(Command command) {
		'''
		{
			"«command.commandType.value»": {
				"type": "«command.robotType.toString»",
				"name": "«IF command.robotName !== null»«command.robotName.value»«ELSE»undefined«ENDIF»",
				"location": {
					"x": «IF command.XValue !== null»«command.XValue.value»«ELSE»"undefined"«ENDIF»,
					"y": «IF command.XValue !== null»«command.YValue.value»«ELSE»"undefined"«ENDIF»
				}
			}
		}
		'''
	}
	
	def capitalizeType(Command command) {
		return command.robotType.toString.toFirstUpper
	}
	
}
