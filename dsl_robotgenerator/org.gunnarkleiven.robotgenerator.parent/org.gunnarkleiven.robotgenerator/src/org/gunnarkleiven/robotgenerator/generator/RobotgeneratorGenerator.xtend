/*
 * generated by Xtext 2.25.0
 */
package org.gunnarkleiven.robotgenerator.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.gunnarkleiven.robotgenerator.robotgenerator.Command

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class RobotgeneratorGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))

		for (e : resource.allContents.toIterable.filter(Command)) {
			fsa.generateFile('''robotgenerator/«e.robotName.value»/«e.robotName.value».py''', e.compile_python)
			fsa.generateFile('''robotgenerator/«e.robotName.value»/«e.robotName.value».json''', e.compile_json)
		}
	}
	
	def compile_python(Command command) {
		'''
		# package robotgenerator;
		
		import «command.capitalizeType»SimpleactionsGenerator
		«command.capitalizeType»SimpleactionsGenerator(port_number_placeholder, '«command.robotName.value»')
		'''	
	}

	
	def compile_json(Command command) {
		'''
		"«command.robotType»"": {
			"name": "«IF command.robotName !== null»«command.robotName.value»«ELSE»undefined«ENDIF»,
			"location": {
				"x": «IF command.XValue !== null»«command.XValue.value»«ELSE»"undefined"«ENDIF»,
				"y": «IF command.XValue !== null»«command.YValue.value»«ELSE»"undefined"«ENDIF»
			}
		}
		'''
	}
	
	
	def capitalizeType(Command command) {
		return command.robotType.toString.toFirstUpper
	}
	
}
