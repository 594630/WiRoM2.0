/**
 * generated by Xtext 2.25.0
 */
package org.gunnarkleiven.robotgenerator.validation;

import java.util.ArrayList;
import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.xbase.lib.CollectionLiterals;
import org.gunnarkleiven.robotgenerator.robotgenerator.Command;
import org.gunnarkleiven.robotgenerator.robotgenerator.RobotType;
import org.gunnarkleiven.robotgenerator.robotgenerator.RobotgeneratorPackage;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class RobotgeneratorValidator extends AbstractRobotgeneratorValidator {
  protected static final String ISSUE_CODE_PREFIX = "org.example.robotgenerator";
  
  public static final String INVALID_ROBOT_TYPE = (RobotgeneratorValidator.ISSUE_CODE_PREFIX + "InvalidRobotType");
  
  public static final String ILLEGAL_ROBOT_NAME = (RobotgeneratorValidator.ISSUE_CODE_PREFIX + "IllegalRobotName");
  
  public static final String DUPLICATE_ROBOT_NAMES = (RobotgeneratorValidator.ISSUE_CODE_PREFIX + "DuplicateRobotNames");
  
  @Check
  public void checkValidRobotType(final Command command) {
    boolean isEnum = false;
    for (final RobotType t : RobotType.VALUES) {
      boolean _equals = command.getRobotType().equals(t);
      if (_equals) {
        isEnum = true;
      }
    }
    if ((!isEnum)) {
      String _name = command.getRobotType().getName();
      String _plus = ("Invalid robot type: \'" + _name);
      String _plus_1 = (_plus + "\'");
      this.error(_plus_1, 
        RobotgeneratorPackage.eINSTANCE.getCommand_RobotType(), 
        RobotgeneratorValidator.INVALID_ROBOT_TYPE, 
        command.getRobotType().getName());
    }
  }
  
  @Check
  public void checkLegalRobotName(final Command command) {
    final ArrayList<String> illegalNames = CollectionLiterals.<String>newArrayList("moose", "mavic2pro");
    final String commandName = command.getRobotName().getValue();
    boolean _contains = illegalNames.contains(commandName);
    if (_contains) {
      this.error((("Protected robot name \'" + commandName) + "\'"), 
        RobotgeneratorPackage.eINSTANCE.getCommand_RobotName(), 
        RobotgeneratorValidator.ILLEGAL_ROBOT_NAME, 
        command.getRobotName().getValue());
    }
  }
}
